Archive member included because of file (symbol)

d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_exit.o)
                              d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr25/tiny-stack/crttn25.o (exit)
d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_copy_data.o)
                              ./buttonOUT/button_out.o (__do_copy_data)
d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_clear_bss.o)
                              ./encoder/encoder.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

encoderType         0x1               ./encoder/encoder.o
encoderCnt          0x2               ./encoder/encoder.o
encoderFlag         0x1               ./encoder/encoder.o
encoderDir          0x1               ./encoder/encoder.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr25/tiny-stack/crttn25.o
LOAD ./hardware/device.o
LOAD ./hardware/refData.o
LOAD ./encoder/encoder.o
LOAD ./buttonOUT/button_out.o
LOAD ./main.o
START GROUP
LOAD d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a
LOAD d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr25/tiny-stack\libm.a
LOAD d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr25/tiny-stack\libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x2f4
 *(.vectors)
 .vectors       0x00000000       0x1e d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr25/tiny-stack/crttn25.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
                0x0000001e                . = ALIGN (0x2)
                0x0000001e                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000001e        0x0 linker stubs
 *(.trampolines*)
                0x0000001e                __trampolines_end = .
 *(.progmem*)
 .progmem.data.refData
                0x0000001e       0x19 ./hardware/refData.o
                0x0000001e                refData
 .progmem.data.encTabFS
                0x00000037       0x1c ./encoder/encoder.o
                0x00000037                encTabFS
 .progmem.data.encTabHS
                0x00000053       0x18 ./encoder/encoder.o
                0x00000053                encTabHS
                0x0000006c                . = ALIGN (0x2)
 *fill*         0x0000006b        0x1 
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000006c                __ctors_start = .
 *(.ctors)
                0x0000006c                __ctors_end = .
                0x0000006c                __dtors_start = .
 *(.dtors)
                0x0000006c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000006c        0x0 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr25/tiny-stack/crttn25.o
                0x0000006c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000006c        0x8 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr25/tiny-stack/crttn25.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000074       0x16 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_copy_data.o)
                0x00000074                __do_copy_data
 .init4         0x0000008a       0x10 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_clear_bss.o)
                0x0000008a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000009a        0x4 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr25/tiny-stack/crttn25.o
 *(.init9)
 *(.text)
 .text          0x0000009e        0x2 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr25/tiny-stack/crttn25.o
                0x0000009e                __vector_1
                0x0000009e                __vector_12
                0x0000009e                __bad_interrupt
                0x0000009e                __vector_6
                0x0000009e                __vector_3
                0x0000009e                __vector_11
                0x0000009e                __vector_13
                0x0000009e                __vector_7
                0x0000009e                __vector_5
                0x0000009e                __vector_4
                0x0000009e                __vector_9
                0x0000009e                __vector_8
                0x0000009e                __vector_14
 .text          0x000000a0        0x0 ./hardware/device.o
 .text          0x000000a0        0x0 ./hardware/refData.o
 .text          0x000000a0        0x0 ./encoder/encoder.o
 .text          0x000000a0        0x0 ./buttonOUT/button_out.o
 .text          0x000000a0        0x0 ./main.o
 .text          0x000000a0        0x0 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_exit.o)
 .text          0x000000a0        0x0 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_copy_data.o)
 .text          0x000000a0        0x0 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_clear_bss.o)
                0x000000a0                . = ALIGN (0x2)
 *(.text.*)
 .text.hdwInit  0x000000a0       0x38 ./hardware/device.o
                0x000000a0                hdwInit
 .text.regEncoderEventCallback
                0x000000d8        0xa ./encoder/encoder.o
                0x000000d8                regEncoderEventCallback
 .text.getEncoder
                0x000000e2       0x10 ./encoder/encoder.o
                0x000000e2                getEncoder
 .text.setEncoder
                0x000000f2       0x10 ./encoder/encoder.o
                0x000000f2                setEncoder
 .text.encoderService
                0x00000102       0x86 ./encoder/encoder.o
                0x00000102                encoderService
 .text.encoderInit
                0x00000188       0x1c ./encoder/encoder.o
                0x00000188                encoderInit
 .text.encoderEvent
                0x000001a4       0x1c ./encoder/encoder.o
                0x000001a4                encoderEvent
 .text.__vector_2
                0x000001c0       0x46 ./encoder/encoder.o
                0x000001c0                __vector_2
 .text.buttonUpdate
                0x00000206       0x26 ./buttonOUT/button_out.o
                0x00000206                buttonUpdate
 .text.buttonHandle
                0x0000022c       0x76 ./buttonOUT/button_out.o
                0x0000022c                buttonHandle
 .text.__vector_10
                0x000002a2       0x30 ./buttonOUT/button_out.o
                0x000002a2                __vector_10
 .text.startup.main
                0x000002d2       0x1e ./main.o
                0x000002d2                main
 .text.libgcc.mul
                0x000002f0        0x0 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_exit.o)
 .text.libgcc.div
                0x000002f0        0x0 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_exit.o)
 .text.libgcc   0x000002f0        0x0 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x000002f0        0x0 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x000002f0        0x0 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x000002f0        0x0 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x000002f0        0x0 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_exit.o)
 .text.libgcc.mul
                0x000002f0        0x0 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x000002f0        0x0 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_copy_data.o)
 .text.libgcc   0x000002f0        0x0 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x000002f0        0x0 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x000002f0        0x0 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x000002f0        0x0 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x000002f0        0x0 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x000002f0        0x0 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x000002f0        0x0 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_clear_bss.o)
 .text.libgcc   0x000002f0        0x0 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x000002f0        0x0 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x000002f0        0x0 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x000002f0        0x0 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x000002f0        0x0 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_clear_bss.o)
                0x000002f0                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000002f0        0x0 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_exit.o)
                0x000002f0                _exit
                0x000002f0                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000002f0        0x4 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_exit.o)
 *(.fini0)
                0x000002f4                _etext = .

.data           0x00800060        0x2 load address 0x000002f4
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr25/tiny-stack/crttn25.o
 .data          0x00800060        0x0 ./hardware/device.o
 .data          0x00800060        0x0 ./hardware/refData.o
 .data          0x00800060        0x0 ./encoder/encoder.o
 .data          0x00800060        0x0 ./buttonOUT/button_out.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_exit.o)
 .data          0x00800060        0x0 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_clear_bss.o)
 *(.data*)
 .data.pressPeriod_ms
                0x00800060        0x1 ./buttonOUT/button_out.o
                0x00800060                pressPeriod_ms
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800062                . = ALIGN (0x2)
 *fill*         0x00800061        0x1 
                0x00800062                _edata = .
                0x00800062                PROVIDE (__data_end, .)

.bss            0x00800062        0xe
                0x00800062                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800062        0x0 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr25/tiny-stack/crttn25.o
 .bss           0x00800062        0x0 ./hardware/device.o
 .bss           0x00800062        0x0 ./hardware/refData.o
 .bss           0x00800062        0x0 ./encoder/encoder.o
 .bss           0x00800062        0x0 ./buttonOUT/button_out.o
 .bss           0x00800062        0x0 ./main.o
 .bss           0x00800062        0x0 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_exit.o)
 .bss           0x00800062        0x0 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_copy_data.o)
 .bss           0x00800062        0x0 d:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr25/tiny-stack\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.encoderState.1661
                0x00800062        0x1 ./encoder/encoder.o
 .bss.encEventCallback
                0x00800063        0x2 ./encoder/encoder.o
 .bss.decDelay  0x00800065        0x1 ./buttonOUT/button_out.o
 .bss.incDelay  0x00800066        0x1 ./buttonOUT/button_out.o
 .bss.decBtnSent
                0x00800067        0x1 ./buttonOUT/button_out.o
 .bss.decBtnPressed
                0x00800068        0x1 ./buttonOUT/button_out.o
 .bss.incBtnSent
                0x00800069        0x1 ./buttonOUT/button_out.o
 .bss.incBtnPressed
                0x0080006a        0x1 ./buttonOUT/button_out.o
 *(COMMON)
 COMMON         0x0080006b        0x5 ./encoder/encoder.o
                0x0080006b                encoderType
                0x0080006c                encoderCnt
                0x0080006e                encoderFlag
                0x0080006f                encoderDir
                0x00800070                PROVIDE (__bss_end, .)
                0x000002f4                __data_load_start = LOADADDR (.data)
                0x000002f6                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800070        0x0
                0x00800070                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800070                PROVIDE (__noinit_end, .)
                0x00800070                _end = .
                0x00800070                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x30
 *(.comment)
 .comment       0x00000000       0x30 ./hardware/device.o
                                 0x31 (size before relaxing)
 .comment       0x00000000       0x31 ./hardware/refData.o
 .comment       0x00000000       0x31 ./encoder/encoder.o
 .comment       0x00000000       0x31 ./buttonOUT/button_out.o
 .comment       0x00000000       0x31 ./main.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(Enc2Btn.elf elf32-avr)
LOAD linker stubs
